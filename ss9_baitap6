#include <stdio.h>

int main() {
	int array[100][100];
	int n, rowS, columnS, tong, max_sum, max_row;
	do{
		printf("MENU\n");
		printf("1.Nhap kich co va gia tri cac phan tu cua mang\n");
		printf("2.In gia tri cac phan tu cua mang theo ma tran\n");
		printf("3.In gia tri cac phan tu la le va tinh tong\n");
		printf("4.In ra cac phan tu nam tren duong bien va tinh tich\n");
		printf("5.In ra cac phan tu nam tren duong cheo chinh\n");
		printf("6.In ra cac phan tu nam tren duong cheo phu\n");
		printf("7.In ra dong co tong gia tri cac phan tu la lon nhat\n");
		printf("8.Thoat\n");
		printf("Lua chon cua ban: ");
		scanf("%d", &n);
		switch(n){
			case 1:
				do{
					printf("nhap so cot[0; 100]: ");
					scanf("%d", &rowS);
				}while(rowS<0||rowS>100);
				
				do{
					printf("nhap so hang[0; 100]: ");
					scanf("%d", &columnS);
				}while(columnS<0||columnS>100);
				
				for(int i = 0; i < rowS; i++){
					for(int j = 0; j < columnS; j++){
						printf("nhap array[%d][%d]: ", i, j);
						scanf("%d", &array[i][j]);
					}
				}
				
				break;
			case 2:
				for(int i = 0; i < rowS; i++){
					for(int j = 0; j < columnS; j++){
						printf("%d ", array[i][j]);
					}
					printf("\n");
				}
				break;
			case 3:
				tong = 0;
				for(int i = 0; i < rowS; i++){
					for(int j = 0; j < columnS; j++){
						if(array[i][j]%2 != 0){
							printf("array[%d][%d]=%d\n", i, j, array[i][j]);
							tong += array[i][j];
						}
					}
				}
				printf("tong: %d\n", tong);
				break;
			case 4:
				tong = 0;
				//bien trai + phai
				for(int i = 0; i < rowS; i++){
					tong *= array[i][0];//trai
					tong *= array[i][columnS-1];//phai
				}
				//bien tren + duoi
				for(int i = 1; i < columnS; i++){
					tong *= array[0][i];//tren
					tong *= array[rowS-1][i];//duoi
				}
				printf("tich: %d\n", tong);
				break;
			case 5:
				for(int i = 0; i < rowS; i++){
					printf("%d\n", array[i][i]);
				}
				break;
			case 6:
				for(int i = 0; i < rowS; i++){
					printf("%d\n", array[i][rowS-1-i]);
					tong += array[i][rowS-1-i];
				}
				break;
			case 7:
				max_sum = 0; 
    			max_row = 0;

    			for (int i = 0; i < rowS; i++) {
        			int sum = 0;
        			for (int j = 0; j < columnS; j++) {
            			sum += array[i][j];
       				}

        
        			if (sum > max_sum) {
            			max_sum = sum;
            			max_row = i;
        			}
    			}

    			printf("Dong co tong lon nhat la dong %d voi tong = %d\n", max_row + 1, max_sum);
				break;
						
				default:
				
				break;
		}
		
	}while(n!=8);

    return 0;
}
